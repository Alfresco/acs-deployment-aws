---
AWSTemplateFormatVersion: "2010-09-09"
Description: "Master template to deploy ACS to AWS using kubernetes."
Metadata:
    AWS::CloudFormation::Interface:
      ParameterGroups:
        - Label:
            default: VPC Stack Configuration
          Parameters:
            - AvailabilityZones
            - KeyPairName
            - PrivateSubnet1CIDR
            - PrivateSubnet2CIDR
            - PublicSubnet1CIDR
            - PublicSubnet2CIDR
            - VPCCIDR
            - NumberOfAZs
        - Label:
            default: Bastion Stack Configuration
          Parameters:
            - RemoteAccessCIDR

      ParameterLabels:
        AvailabilityZones:
          default: The AZ's to deploy to
        NumberOfAZs:
          default: The number of AZ's to deploy into
        PrivateSubnet1CIDR:
          default: The CIDR block for the first private subnet
        PrivateSubnet2CIDR:
          default: The CIDR block for the second private subnet
        PublicSubnet1CIDR:
          default: The CIDR block for the first public subnet
        PublicSubnet2CIDR:
          default: The CIDR block for the second public subnet
        VPCCIDR:
          default: The CIDR block for the VPC to create
        KeyPairName:
          default: The key pair name to use to access the instances
        RemoteAccessCIDR:
          default: The CIDR block to allow remote access
        TemplateBucketName:
          default: The name of the S3 bucket that holds the templates
        TemplateBucketKeyPrefix:
          default: The Key prefix for the templates in the S3 template bucket
Parameters:
    AvailabilityZones:
      Description: "List of Availability Zones to use for the subnets in the VPC."
      Type: "List<AWS::EC2::AvailabilityZone::Name>"
    NumberOfAZs:
      Default: "2"
      Type: String
      AllowedValues:
        - "1"
        - "2"
      Description: "The number of AZ's to use in this deployment"
    PrivateSubnet1CIDR:
      AllowedPattern: "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$"
      ConstraintDescription: "CIDR block parameter must be in the form x.x.x.x/16-28"
      Default: "10.0.0.0/19"
      Description: "CIDR block for private subnet 1 located in Availability Zone 1"
      Type: "String"
    PrivateSubnet2CIDR:
      AllowedPattern: "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$"
      ConstraintDescription: "CIDR block parameter must be in the form x.x.x.x/16-28"
      Default: "10.0.32.0/19"
      Description: "CIDR block for private subnet 1 located in Availability Zone 2"
      Type: "String"
    PublicSubnet1CIDR:
      AllowedPattern: "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$"
      ConstraintDescription: "CIDR block parameter must be in the form x.x.x.x/16-28"
      Default: "10.0.128.0/20"
      Description: "CIDR block for the public (DMZ) subnet 1 located in Availability Zone 1"
      Type: "String"
    PublicSubnet2CIDR:
      AllowedPattern: "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$"
      ConstraintDescription: "CIDR block parameter must be in the form x.x.x.x/16-28"
      Default: "10.0.144.0/20"
      Description: "CIDR block for the public (DMZ) subnet 2 located in Availability Zone 2"
      Type: "String"
    VPCCIDR:
      AllowedPattern: "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$"
      ConstraintDescription: "CIDR block parameter must be in the form x.x.x.x/16-28"
      Default: "10.0.0.0/16"
      Description: "CIDR block for the VPC"
      Type: "String"
    KeyPairName:
      Description: "The name of an existing public/private key pair, which allows you to securely connect to your instance after it launches"
      Type: "AWS::EC2::KeyPair::KeyName"
    RemoteAccessCIDR:
      AllowedPattern: "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/([0-9]|[1-2][0-9]|3[0-2]))$"
      ConstraintDescription: "CIDR block parameter must be in the form x.x.x.x/x"
      Description: "The CIDR IP range that is permitted to access the AWS resources. It is recommended that you set this value to a trusted IP range."
      Type: "String"
    TemplateBucketName:
      AllowedPattern: "^[0-9a-zA-Z]+([0-9a-zA-Z-]*[0-9a-zA-Z])*$"
      ConstraintDescription: "Bucket name can include numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen (-)."
      Default: "acs-deployment-aws"
      Description: "S3 bucket name that contains the CFN templates (VPC, Bastion etc). This string can include numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen (-)."
      Type: "String"
    TemplateBucketKeyPrefix:
      AllowedPattern: "^[0-9a-zA-Z-/]*$"
      ConstraintDescription: "Template bucket key prefix can include numbers, lowercase letters, uppercase letters, hyphens (-), and forward slash (/)."
      Default: "templates"
      Type: "String"

Resources:
    VPCStack:
      Type: AWS::CloudFormation::Stack
      Properties:
        Tags:
          - Key: Name
            Value: !Sub "${AWS::StackName}-k8s" 
        TemplateURL: !Sub "https://s3.amazonaws.com/quickstart-reference/aws/vpc/latest/templates/aws-vpc.template"
        Parameters:
          AvailabilityZones: !Join [",", !Ref AvailabilityZones]
          KeyPairName: !Ref KeyPairName
          PrivateSubnet1ACIDR: !Ref PrivateSubnet1CIDR
          PrivateSubnet2ACIDR: !Ref PrivateSubnet2CIDR
          PublicSubnet1CIDR: !Ref PublicSubnet1CIDR
          PublicSubnet2CIDR: !Ref PublicSubnet2CIDR
          CreatePrivateSubnets: true
          VPCCIDR: !Ref VPCCIDR

    BastionStack:
      Type: AWS::CloudFormation::Stack
      DependsOn:
        - VPCStack
      Properties:
        Tags:
          - Key: Name
            Value: !Sub "${AWS::StackName}-k8s-Bastion" 
        TemplateURL: !Sub "https://${TemplateBucketName}.s3.amazonaws.com/${TemplateBucketKeyPrefix}/bastion.yaml"
        Parameters:
          KeyPairName: !Ref KeyPairName
          PublicSubnet1: !GetAtt VPCStack.Outputs.PublicSubnet1ID
          PublicSubnet2: !GetAtt VPCStack.Outputs.PublicSubnet2ID
          PrivateSubnet1: !GetAtt VPCStack.Outputs.PrivateSubnet1AID
          PrivateSubnet2: !GetAtt VPCStack.Outputs.PrivateSubnet2AID
          RemoteAccessCIDR: !Ref RemoteAccessCIDR
          VPCID: !GetAtt VPCStack.Outputs.VPCID
          InstanceRole: !GetAtt NodeInstanceRole.Arn
          EKSServiceRole: !GetAtt EKSServiceRole.Arn

    NodeInstanceRole:
      Type: AWS::IAM::Role
      Properties:
        AssumeRolePolicyDocument:
          Version: "2012-10-17"
          Statement:
          - Effect: Allow
            Principal:
              Service:
              - ec2.amazonaws.com
            Action:
            - sts:AssumeRole
        Path: /
        ManagedPolicyArns:
          - arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy
          - arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy
          - arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly

    EKSServiceRole:
      Type: AWS::IAM::Role
      Properties:
        AssumeRolePolicyDocument:
          Version: "2012-10-17"
          Statement:
            - Action:
                - sts:AssumeRole
              Effect: Allow
              Principal:
                Service: eks.amazonaws.com
        ManagedPolicyArns:
          - arn:aws:iam::aws:policy/AmazonEKSClusterPolicy
          - arn:aws:iam::aws:policy/AmazonEKSServicePolicy

    WorkersSecurityGroup:
      Type: AWS::EC2::SecurityGroup
      DependsOn:
        - VPCStack
      Properties: 
        GroupName: !Sub "${AWS::StackName}-k8s-workersSg"
        GroupDescription: "Security Group for EKS worker Nodes"
        Tags:
          - Key: Name
            Value: !Sub "${AWS::StackName}-k8s-workersSg" 
        VpcId: !GetAtt VPCStack.Outputs.VPCID

    EFSStack:
      Type: AWS::CloudFormation::Stack
      DependsOn:
        - WorkersSecurityGroup
      Properties:
        Tags:
          - Key: Name
            Value: !Sub "${AWS::StackName}-k8s-efs" 
        TemplateURL: !Sub "https://${TemplateBucketName}.s3.amazonaws.com/${TemplateBucketKeyPrefix}/efs.yaml"
        Parameters:
          PrivateSubnet1: !GetAtt VPCStack.Outputs.PrivateSubnet1AID
          PrivateSubnet2: !GetAtt VPCStack.Outputs.PrivateSubnet2AID
          SecurityGroup: !GetAtt WorkersSecurityGroup.GroupId

Outputs:
  EKSServiceRole:
    Value: !GetAtt EKSServiceRole.Arn
  NodeInstanceRole:
    Value: !GetAtt NodeInstanceRole.Arn
  WorkersSecurityGroup:
    Value: !GetAtt WorkersSecurityGroup.GroupId

  RemoteAccessCIDR: 
    Value: !Ref RemoteAccessCIDR
  VPCID: 
    Value: !GetAtt VPCStack.Outputs.VPCID

  BastionSubStackName:
    Value: !GetAtt BastionStack.Outputs.SubStackName
  BastionSecurityGroup:
    Value: !GetAtt BastionStack.Outputs.BastionSecurityGroup
  BastionLaunchConfiguration:
    Value: !GetAtt BastionStack.Outputs.BastionLaunchConfiguration
  BastionAutoScalingGroup:
    Value: !GetAtt BastionStack.Outputs.BastionAutoScalingGroup
  BastionEIP:
    Value: !GetAtt BastionStack.Outputs.BastionEIP
  ControlPlaneSecurityGroup:
    Value: !GetAtt BastionStack.Outputs.ControlPlaneSecurityGroup
  BastionMainLogGroup:
    Value: !GetAtt BastionStack.Outputs.BastionMainLogGroup
  BastionInstanceProfile:
    Value: !GetAtt BastionStack.Outputs.BastionInstanceProfile
  BastionInstanceRole:
    Value: !GetAtt BastionStack.Outputs.BastionInstanceRole
  BastionMainLogGroup:
    Value: !GetAtt BastionStack.Outputs.BastionMainLogGroup

  EFSSubstackName:
    Value: !GetAtt EFSStack.Outputs.SubstackName
  EFSName:
    Value: !GetAtt EFSStack.Outputs.EFSName
  EFSMountTargets:
    Value: !GetAtt EFSStack.Outputs.MountTargets